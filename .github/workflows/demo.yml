name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v4
        with: 
          # This step caches the node modules to speed up subsequent builds
          path: ~/.npm   
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}        
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v4
        with: 
          # This step caches the node modules to speed up subsequent builds
          path: ~/.npm   
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Push Js filename
        id: publish
        # This step sets the output variable with the name of the built JavaScript file
        run: find dist/assets/*.js -type f -execdir echo '::set-output name=script-file::{}' ';'  
        # This step builds the website
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
        # This step uploads the build artifacts
          name: dist-files
          path: dist
          # Specify the path to the build artifacts
          # path: |
          #   dist
          #   package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: get build artifacts
      # This step downloads the build artifacts from the previous job
        uses: actions/download-artifact@v4
        with:
        # Specify the name of the artifact to download
          name: dist-files
      - name: Output contents
        run: ls -la    
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
